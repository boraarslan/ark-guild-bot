//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

use std::fmt::{Display, Debug};

use sea_orm::entity::prelude::*;

#[derive(Debug, Copy, Clone, PartialEq, EnumIter, DeriveActiveEnum, poise::ChoiceParameter)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "class")]
pub enum Class {
    #[sea_orm(string_value = "Artillerist")]
    Artillerist,
    #[sea_orm(string_value = "Bard")]
    Bard,
    #[sea_orm(string_value = "Berserker")]
    Berserker,
    #[sea_orm(string_value = "Deadeye")]
    Deadeye,
    #[sea_orm(string_value = "Deathblade")]
    Deathblade,
    #[sea_orm(string_value = "Gunlancer")]
    Gunlancer,
    #[sea_orm(string_value = "Gunslinger")]
    Gunslinger,
    #[sea_orm(string_value = "Paladin")]
    Paladin,
    #[sea_orm(string_value = "Scrapper")]
    Scrapper,
    #[sea_orm(string_value = "Shadowhunter")]
    Shadowhunter,
    #[sea_orm(string_value = "Sharpshooter")]
    Sharpshooter,
    #[sea_orm(string_value = "Sorceress")]
    Sorceress,
    #[sea_orm(string_value = "Soulfist")]
    Soulfist,
    #[sea_orm(string_value = "Striker")]
    Striker,
    #[sea_orm(string_value = "Wardancer")]
    Wardancer,
}
#[derive(Debug, Copy, Clone, PartialEq, EnumIter, DeriveActiveEnum, poise::ChoiceParameter)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "role")]
pub enum Role {
    #[sea_orm(string_value = "Deputy")]
    Deputy,
    #[sea_orm(string_value = "Guild Master")]
    GuildMaster,
    #[sea_orm(string_value = "Guildmate")]
    Guildmate,
    #[sea_orm(string_value = "Officer")]
    Officer,
}

impl Display for Class {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        Debug::fmt(&self, f)
    }
}

impl Display for Role {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        Debug::fmt(&self, f)
    }
}